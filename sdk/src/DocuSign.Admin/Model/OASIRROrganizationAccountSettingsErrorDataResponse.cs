/* 
 * DocuSign Admin API
 *
 * An API for an organization administrator to manage organizations, accounts and users
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = DocuSign.Admin.Client.SwaggerDateConverter;

namespace DocuSign.Admin.Model
{
    /// <summary>
    /// OASIRROrganizationAccountSettingsErrorDataResponse
    /// </summary>
    [DataContract]
    public partial class OASIRROrganizationAccountSettingsErrorDataResponse :  IEquatable<OASIRROrganizationAccountSettingsErrorDataResponse>, IValidatableObject
    {
        public OASIRROrganizationAccountSettingsErrorDataResponse()
        {
            // Empty Constructor
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="OASIRROrganizationAccountSettingsErrorDataResponse" /> class.
        /// </summary>
        /// <param name="AccountId">AccountId.</param>
        /// <param name="AccountName">AccountName.</param>
        /// <param name="Error">Error.</param>
        /// <param name="ErrorKey">ErrorKey.</param>
        /// <param name="SettingKey">SettingKey.</param>
        public OASIRROrganizationAccountSettingsErrorDataResponse(string AccountId = default(string), string AccountName = default(string), string Error = default(string), string ErrorKey = default(string), string SettingKey = default(string))
        {
            this.AccountId = AccountId;
            this.AccountName = AccountName;
            this.Error = Error;
            this.ErrorKey = ErrorKey;
            this.SettingKey = SettingKey;
        }
        
        /// <summary>
        /// Gets or Sets AccountId
        /// </summary>
        [DataMember(Name="account_id", EmitDefaultValue=false)]
        public string AccountId { get; set; }
        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="account_name", EmitDefaultValue=false)]
        public string AccountName { get; set; }
        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [DataMember(Name="error", EmitDefaultValue=false)]
        public string Error { get; set; }
        /// <summary>
        /// Gets or Sets ErrorKey
        /// </summary>
        [DataMember(Name="error_key", EmitDefaultValue=false)]
        public string ErrorKey { get; set; }
        /// <summary>
        /// Gets or Sets SettingKey
        /// </summary>
        [DataMember(Name="setting_key", EmitDefaultValue=false)]
        public string SettingKey { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OASIRROrganizationAccountSettingsErrorDataResponse {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  ErrorKey: ").Append(ErrorKey).Append("\n");
            sb.Append("  SettingKey: ").Append(SettingKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as OASIRROrganizationAccountSettingsErrorDataResponse);
        }

        /// <summary>
        /// Returns true if OASIRROrganizationAccountSettingsErrorDataResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of OASIRROrganizationAccountSettingsErrorDataResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OASIRROrganizationAccountSettingsErrorDataResponse other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AccountId == other.AccountId ||
                    this.AccountId != null &&
                    this.AccountId.Equals(other.AccountId)
                ) && 
                (
                    this.AccountName == other.AccountName ||
                    this.AccountName != null &&
                    this.AccountName.Equals(other.AccountName)
                ) && 
                (
                    this.Error == other.Error ||
                    this.Error != null &&
                    this.Error.Equals(other.Error)
                ) && 
                (
                    this.ErrorKey == other.ErrorKey ||
                    this.ErrorKey != null &&
                    this.ErrorKey.Equals(other.ErrorKey)
                ) && 
                (
                    this.SettingKey == other.SettingKey ||
                    this.SettingKey != null &&
                    this.SettingKey.Equals(other.SettingKey)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AccountId != null)
                    hash = hash * 59 + this.AccountId.GetHashCode();
                if (this.AccountName != null)
                    hash = hash * 59 + this.AccountName.GetHashCode();
                if (this.Error != null)
                    hash = hash * 59 + this.Error.GetHashCode();
                if (this.ErrorKey != null)
                    hash = hash * 59 + this.ErrorKey.GetHashCode();
                if (this.SettingKey != null)
                    hash = hash * 59 + this.SettingKey.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }
}
